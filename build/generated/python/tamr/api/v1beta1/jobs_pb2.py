# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tamr/api/v1beta1/jobs.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2
from google.api import field_behavior_pb2 as google_dot_api_dot_field__behavior__pb2
from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from protoc_gen_openapiv2.options import annotations_pb2 as protoc__gen__openapiv2_dot_options_dot_annotations__pb2
from tamr.api.v1beta1 import errors_pb2 as tamr_dot_api_dot_v1beta1_dot_errors__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1btamr/api/v1beta1/jobs.proto\x12\x10tamr.api.v1beta1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\x1a\x1dtamr/api/v1beta1/errors.proto\";\n\x10\x43reateJobRequest\x12\'\n\x03job\x18\x01 \x01(\x0b\x32\x15.tamr.api.v1beta1.JobB\x03\xe0\x41\x02\"$\n\rGetJobRequest\x12\x13\n\x06job_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\"\xc6\x01\n\x03Job\x12\x13\n\x06job_id\x18\x01 \x01(\tB\x03\xe0\x41\x03\x12>\n\rconfiguration\x18\x02 \x01(\x0b\x32\".tamr.api.v1beta1.JobConfigurationB\x03\xe0\x41\x02\x12\x30\n\x06status\x18\x03 \x01(\x0b\x32\x1b.tamr.api.v1beta1.JobStatusB\x03\xe0\x41\x03\x12\x38\n\x0estatus_history\x18\x04 \x03(\x0b\x32\x1b.tamr.api.v1beta1.JobStatusB\x03\xe0\x41\x03\"\xd5\x02\n\x10JobConfiguration\x12:\n\x04load\x18\x01 \x01(\x0b\x32*.tamr.api.v1beta1.JobConfiguration.LoadJobH\x00\x12>\n\x06update\x18\x02 \x01(\x0b\x32,.tamr.api.v1beta1.JobConfiguration.UpdateJobH\x00\x12@\n\x07publish\x18\x03 \x01(\x0b\x32-.tamr.api.v1beta1.JobConfiguration.PublishJobH\x00\x1a!\n\x07LoadJob\x12\x16\n\tsource_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\x1a)\n\nPublishJob\x12\x1b\n\x0e\x64\x65stination_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\x1a)\n\tUpdateJob\x12\x1c\n\x0f\x64\x61ta_product_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\x42\n\n\x08job_type\"\xa3\x01\n\tJobStatus\x12.\n\x05state\x18\x01 \x01(\x0e\x32\x1a.tamr.api.v1beta1.JobStateB\x03\xe0\x41\x03\x12\x39\n\x10state_start_time\x18\x02 \x01(\x0b\x32\x1a.google.protobuf.TimestampB\x03\xe0\x41\x03\x12+\n\x05\x65rror\x18\x03 \x01(\x0b\x32\x17.tamr.api.v1beta1.ErrorB\x03\xe0\x41\x03\"8\n\x0fListJobsRequest\x12\x11\n\tpage_size\x18\x01 \x01(\r\x12\x12\n\npage_token\x18\x02 \x01(\t\"P\n\x10ListJobsResponse\x12#\n\x04jobs\x18\x01 \x03(\x0b\x32\x15.tamr.api.v1beta1.Job\x12\x17\n\x0fnext_page_token\x18\x02 \x01(\t\"%\n\x0eStopJobRequest\x12\x13\n\x06job_id\x18\x01 \x01(\tB\x03\xe0\x41\x02\"\x11\n\x0fStopJobResponse*S\n\x08JobState\x12\x15\n\x11STATE_UNSPECIFIED\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\x0b\n\x07RUNNING\x10\x02\x12\x0c\n\x08STOPPING\x10\x03\x12\x08\n\x04\x44ONE\x10\x04\x32\xc4\x08\n\x04Jobs\x12\xad\x01\n\x06GetJob\x12\x1f.tamr.api.v1beta1.GetJobRequest\x1a\x15.tamr.api.v1beta1.Job\"k\x92\x41\x46\x12\x03get\x1a?Fetch details of a job, including its configuration and status.\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/v1beta1/jobs/{job_id}\x12\x8c\x01\n\x08ListJobs\x12!.tamr.api.v1beta1.ListJobsRequest\x1a\".tamr.api.v1beta1.ListJobsResponse\"9\x92\x41\x1d\x12\x04list\x1a\x15\x46\x65tch a page of jobs.\x82\xd3\xe4\x93\x02\x13\x12\x11/api/v1beta1/jobs\x12\xe1\x04\n\x07StopJob\x12 .tamr.api.v1beta1.StopJobRequest\x1a!.tamr.api.v1beta1.StopJobResponse\"\x90\x04\x92\x41\xe2\x03\x12\x04stop\x1a\xd9\x03Signal a job to stop.\n\n* If the job is `PENDING`, it will immediately transition to `DONE`.\n* If the job is `RUNNING`, then the job will interrupt its work and terminate.\n* If the job is `DONE`, `stop` has no effect.\n\n*Note*: this is an asynchronous operation and it may take some time before a `RUNNING` job transitions to `DONE`. In fact, a job may still succeed or fail after `stop` has been signalled. Users should monitor job status with `get` until the job is `DONE`.\x82\xd3\xe4\x93\x02$\"\x1f/api/v1beta1/jobs/{job_id}:stop:\x01*\x12\x98\x01\n\tCreateJob\x12\".tamr.api.v1beta1.CreateJobRequest\x1a\x15.tamr.api.v1beta1.Job\"P\x92\x41/\x12\x06\x63reate\x1a%Create a job for immediate execution.\x82\xd3\xe4\x93\x02\x18\"\x11/api/v1beta1/jobs:\x03jobB6\n com.tamr.api.v1beta1.jobs.protosP\x01Z\x10tamr.api.v1beta1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'tamr.api.v1beta1.jobs_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n com.tamr.api.v1beta1.jobs.protosP\001Z\020tamr.api.v1beta1'
  _globals['_CREATEJOBREQUEST'].fields_by_name['job']._loaded_options = None
  _globals['_CREATEJOBREQUEST'].fields_by_name['job']._serialized_options = b'\340A\002'
  _globals['_GETJOBREQUEST'].fields_by_name['job_id']._loaded_options = None
  _globals['_GETJOBREQUEST'].fields_by_name['job_id']._serialized_options = b'\340A\002'
  _globals['_JOB'].fields_by_name['job_id']._loaded_options = None
  _globals['_JOB'].fields_by_name['job_id']._serialized_options = b'\340A\003'
  _globals['_JOB'].fields_by_name['configuration']._loaded_options = None
  _globals['_JOB'].fields_by_name['configuration']._serialized_options = b'\340A\002'
  _globals['_JOB'].fields_by_name['status']._loaded_options = None
  _globals['_JOB'].fields_by_name['status']._serialized_options = b'\340A\003'
  _globals['_JOB'].fields_by_name['status_history']._loaded_options = None
  _globals['_JOB'].fields_by_name['status_history']._serialized_options = b'\340A\003'
  _globals['_JOBCONFIGURATION_LOADJOB'].fields_by_name['source_id']._loaded_options = None
  _globals['_JOBCONFIGURATION_LOADJOB'].fields_by_name['source_id']._serialized_options = b'\340A\002'
  _globals['_JOBCONFIGURATION_PUBLISHJOB'].fields_by_name['destination_id']._loaded_options = None
  _globals['_JOBCONFIGURATION_PUBLISHJOB'].fields_by_name['destination_id']._serialized_options = b'\340A\002'
  _globals['_JOBCONFIGURATION_UPDATEJOB'].fields_by_name['data_product_id']._loaded_options = None
  _globals['_JOBCONFIGURATION_UPDATEJOB'].fields_by_name['data_product_id']._serialized_options = b'\340A\002'
  _globals['_JOBSTATUS'].fields_by_name['state']._loaded_options = None
  _globals['_JOBSTATUS'].fields_by_name['state']._serialized_options = b'\340A\003'
  _globals['_JOBSTATUS'].fields_by_name['state_start_time']._loaded_options = None
  _globals['_JOBSTATUS'].fields_by_name['state_start_time']._serialized_options = b'\340A\003'
  _globals['_JOBSTATUS'].fields_by_name['error']._loaded_options = None
  _globals['_JOBSTATUS'].fields_by_name['error']._serialized_options = b'\340A\003'
  _globals['_STOPJOBREQUEST'].fields_by_name['job_id']._loaded_options = None
  _globals['_STOPJOBREQUEST'].fields_by_name['job_id']._serialized_options = b'\340A\002'
  _globals['_JOBS'].methods_by_name['GetJob']._loaded_options = None
  _globals['_JOBS'].methods_by_name['GetJob']._serialized_options = b'\222AF\022\003get\032?Fetch details of a job, including its configuration and status.\202\323\344\223\002\034\022\032/api/v1beta1/jobs/{job_id}'
  _globals['_JOBS'].methods_by_name['ListJobs']._loaded_options = None
  _globals['_JOBS'].methods_by_name['ListJobs']._serialized_options = b'\222A\035\022\004list\032\025Fetch a page of jobs.\202\323\344\223\002\023\022\021/api/v1beta1/jobs'
  _globals['_JOBS'].methods_by_name['StopJob']._loaded_options = None
  _globals['_JOBS'].methods_by_name['StopJob']._serialized_options = b'\222A\342\003\022\004stop\032\331\003Signal a job to stop.\n\n* If the job is `PENDING`, it will immediately transition to `DONE`.\n* If the job is `RUNNING`, then the job will interrupt its work and terminate.\n* If the job is `DONE`, `stop` has no effect.\n\n*Note*: this is an asynchronous operation and it may take some time before a `RUNNING` job transitions to `DONE`. In fact, a job may still succeed or fail after `stop` has been signalled. Users should monitor job status with `get` until the job is `DONE`.\202\323\344\223\002$\"\037/api/v1beta1/jobs/{job_id}:stop:\001*'
  _globals['_JOBS'].methods_by_name['CreateJob']._loaded_options = None
  _globals['_JOBS'].methods_by_name['CreateJob']._serialized_options = b'\222A/\022\006create\032%Create a job for immediate execution.\202\323\344\223\002\030\"\021/api/v1beta1/jobs:\003job'
  _globals['_JOBSTATE']._serialized_start=1232
  _globals['_JOBSTATE']._serialized_end=1315
  _globals['_CREATEJOBREQUEST']._serialized_start=224
  _globals['_CREATEJOBREQUEST']._serialized_end=283
  _globals['_GETJOBREQUEST']._serialized_start=285
  _globals['_GETJOBREQUEST']._serialized_end=321
  _globals['_JOB']._serialized_start=324
  _globals['_JOB']._serialized_end=522
  _globals['_JOBCONFIGURATION']._serialized_start=525
  _globals['_JOBCONFIGURATION']._serialized_end=866
  _globals['_JOBCONFIGURATION_LOADJOB']._serialized_start=735
  _globals['_JOBCONFIGURATION_LOADJOB']._serialized_end=768
  _globals['_JOBCONFIGURATION_PUBLISHJOB']._serialized_start=770
  _globals['_JOBCONFIGURATION_PUBLISHJOB']._serialized_end=811
  _globals['_JOBCONFIGURATION_UPDATEJOB']._serialized_start=813
  _globals['_JOBCONFIGURATION_UPDATEJOB']._serialized_end=854
  _globals['_JOBSTATUS']._serialized_start=869
  _globals['_JOBSTATUS']._serialized_end=1032
  _globals['_LISTJOBSREQUEST']._serialized_start=1034
  _globals['_LISTJOBSREQUEST']._serialized_end=1090
  _globals['_LISTJOBSRESPONSE']._serialized_start=1092
  _globals['_LISTJOBSRESPONSE']._serialized_end=1172
  _globals['_STOPJOBREQUEST']._serialized_start=1174
  _globals['_STOPJOBREQUEST']._serialized_end=1211
  _globals['_STOPJOBRESPONSE']._serialized_start=1213
  _globals['_STOPJOBRESPONSE']._serialized_end=1230
  _globals['_JOBS']._serialized_start=1318
  _globals['_JOBS']._serialized_end=2410
# @@protoc_insertion_point(module_scope)
